# This is a basic workflow to help you get started with Actions

name: CD

on:
  push:
    branches:
      - main
      - dev
      - qa
  pull_request:
    branches:
      - dev
      - qa 
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    environment: ${{ github.ref_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libjpeg-dev \
            zlib1g-dev \
            libtiff-dev \
            libpng-dev \
            libfreetype6-dev \
            liblcms2-dev \
            libwebp-dev \
            tcl8.6-dev \
            tk8.6-dev \
            python3-tk \
            git \
            build-essential \
            libffi-dev \
            libssl-dev

      - name: Install Python dependencies
        run: pip install --upgrade pip && pip install -r requirements.txt

      - name: Run Ruff linting
        uses: streamlit/streamlit-app-action@v0.0.3
        with:
          app-path: streamlit_app.py
          ruff: true

      - name: Run tests
        run: pytest --disable-warnings

      - name: Deploy to environment
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            export APP_ENV="prod"
            export APP_KEY="${{ secrets.PROD_API_KEY }}"
          elif [ "${{ github.ref_name }}" == "qa" ]; then
            export APP_ENV="qa"
            export APP_KEY="${{ secrets.QA_API_KEY }}"
          else
            export APP_ENV="dev"
            export APP_KEY="${{ secrets.DEV_API_KEY }}"
          fi

          streamlit run app/main.py &

          echo "ðŸš€ Deployed to '${APP_ENV}'"
          echo "ðŸ”‘ Using credentials for ${APP_ENV} (hidden)"
