# This is a basic workflow to help you get started with Actions

name: CD

on:
  push:
    branches:
      - main
      - dev
      - qa 
  pull_request:
    branches:
      - dev
      - qa
  pull_request:
    branches:
      - dev
      - qa
  workflow_dispatch:

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    # Map branch names to GitHub Environments
    environment: ${{ github.ref_name == 'main' && 'prod' || github.ref_name == 'qa' && 'QA' || 'dev' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          # Only install compatible packages; skip pillow if not needed
          pip install -r requirements.txt
          pip install ruff pytest

      - name: Run Ruff linting
        run: |
          echo "üîç Running Ruff linting..."
          ruff check app tests

      - name: Run tests
        run: pytest tests --disable-warnings

      - name: Deploy to environment
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            export APP_ENV="Prod"
            export APP_KEY="${{ secrets.PROD_API_KEY }}"
          elif [ "${{ github.ref_name }}" == "qa" ]; then
            export APP_ENV="QA"
            export APP_KEY="${{ secrets.QA_API_KEY }}"
          else
            export APP_ENV="Dev"
            export APP_KEY="${{ secrets.DEV_API_KEY }}"
          fi

          echo "üöÄ Deployed to '${APP_ENV}'"
          echo "üîë Using credentials for ${APP_ENV} (hidden)"

      - name: Deploy Streamlit app
        run: |
          streamlit run app/main.py --server.port 8501 --server.headless true
